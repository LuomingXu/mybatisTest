<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--这个namespace可以重命名, 因为这边不会使用mapper接口来实现调用这个sql的xm文件-->
<mapper namespace="mybatis">
  <resultMap id="BaseResultMap" type="dto.CityModel">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="Name" jdbcType="VARCHAR" property="name" />
    <result column="CountryCode" jdbcType="VARCHAR" property="countrycode" />
    <result column="District" jdbcType="VARCHAR" property="district" />
    <result column="Population" jdbcType="INTEGER" property="population" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, Name, CountryCode, District, Population
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from city
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectTest" resultMap="BaseResultMap">
    select top 20
    <include refid="Base_Column_List" />
    from city
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from city
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="dto.CityModel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SQL_Server
    </selectKey>
    insert into city (Name, CountryCode, District, 
      Population)
    values (#{name,jdbcType=VARCHAR}, #{countrycode,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR}, 
      #{population,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="dto.CityModel">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SQL_Server
    </selectKey>
    insert into city
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        Name,
      </if>
      <if test="countrycode != null">
        CountryCode,
      </if>
      <if test="district != null">
        District,
      </if>
      <if test="population != null">
        Population,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="countrycode != null">
        #{countrycode,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        #{district,jdbcType=VARCHAR},
      </if>
      <if test="population != null">
        #{population,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="dto.CityModel">
    update city
    <set>
      <if test="name != null">
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="countrycode != null">
        CountryCode = #{countrycode,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        District = #{district,jdbcType=VARCHAR},
      </if>
      <if test="population != null">
        Population = #{population,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="dto.CityModel">
    update city
    set Name = #{name,jdbcType=VARCHAR},
      CountryCode = #{countrycode,jdbcType=VARCHAR},
      District = #{district,jdbcType=VARCHAR},
      Population = #{population,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>